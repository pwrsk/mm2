-- Создаем платформу
local platform = Instance.new("Part")
platform.Size = Vector3.new(40, 1, 40) -- Размер платформы
platform.CFrame = CFrame.new(-108, 153, 22) -- Положение платформы
platform.Anchored = true -- Закрепляем платформу на месте
platform.Transparency = 0.7
platform.CanCollide = true
platform.Color = Color3.fromRGB(148, 0, 211)
platform.Material = Enum.Material.Glass
platform.Parent = game.Workspace

-- Создаем два стула по середине платформы
local chairSize = Vector3.new(2, 2, 2)
local chairMaterial = Enum.Material.ForceField

local chair1 = Instance.new("Part")
chair1.Size = chairSize
chair1.CFrame = platform.CFrame * CFrame.new(0, 1, 10) -- Позиция для стула #1
chair1.Anchored = true
chair1.CanCollide = false
chair1.Color = Color3.fromRGB(148, 0, 211)
chair1.Material = chairMaterial
chair1.Parent = game.Workspace

local chair2 = chair1:Clone()
chair2.CFrame = platform.CFrame * CFrame.new(0, 1, -10) -- Позиция для стула #2
chair2.Parent = game.Workspace

-- Скрипт для садения на стулья
function Sit(player, chair)
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.Sit = true
        humanoid.Sitorso.CFrame = chair.CFrame * CFrame.new(0, -1.5, 0) -- Позиция сидения на стуле (немного ниже)
    end
end

chair1.Touched:Connect(function(hit)
    local player = game.Players:GetPlayerFromCharacter(hit.Parent)
    if player then
        Sit(player, chair1)
    end
end)

chair2.Touched:Connect(function(hit)
    local player = game.Players:GetPlayerFromCharacter(hit.Parent)
    if player then
        Sit(player, chair2)
    end
end)
local part = Instance.new("Part")
part.Size = Vector3.new(4, 4, 4)
part.Position = Vector3.new(-126, 136, 48)
part.BrickColor = BrickColor.new("Royal purple")
part.Material = Enum.Material.ForceField
part.Anchored = true
part.Parent = game.Workspace

local function onTouched(hit)
    local character = hit.Parent
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    if humanoid then
        character:SetPrimaryPartCFrame(CFrame.new(-107, 157, 22))
    end
end

part.Touched:Connect(onTouched)
game.Lighting.TimeOfDay = 0.5
game.Lighting.ClockTime = 0
game.Lighting.FogEnd = 150
game.Lighting.Brightness = 0
local Players = game:GetService("Players")

local part = Instance.new("Part")
part.Size = Vector3.new(10, 1, 10)
part.Position = Vector3.new(-108, 146, 84)
part.BrickColor = BrickColor.new("Royal purple")
part.Transparency = 0.7
part.Material = Enum.Material.Glass
part.Anchored = true
part.Parent = workspace

local function rotatePlayer(humanoid)
    return function()
        if humanoid:GetState() == Enum.HumanoidStateType.Seated then
            humanoid.Sit = false
        end
        local character = humanoid.Parent
        if character then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart and rootPart:IsA("Part") then
                local playerPosition = rootPart.Position
                local partPosition = part.Position
                local direction = (playerPosition - partPosition).unit
                local rotationSpeed = 3 -- Скорость вращения (3 оборота в секунду)
                rootPart.CFrame = CFrame.new(rootPart.Position) * CFrame.Angles(0, math.rad(rotationSpeed) * tick(), 0) * CFrame.new(direction * 10)
            end
        end
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChild("Humanoid")
        humanoid.Touched:Connect(rotatePlayer(humanoid))
    end)
end)
